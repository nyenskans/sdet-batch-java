What is a List:
    List is an interface inside the collections framework which have following properties:
    1) Insertion order is maintained.
    2) We can store duplicate data.
List is implemented by many classes but we will be focusing on ArrayList and LinkedList:
ArrayList:
    when the requirements are that there will be a lot of data reading then we should be using
    with ArrayList.
LinkedList:
    If most of our operations will be adding the data to a list, in the middle or in the beginning or shifting the
    data around we should be using LinkedList.
Iterator:
    is an interface that has three methods hasNext() next() and remove().
    whenever we try to modify the size of a list using simple loop there are chances that it will
    not work or will throw an error because lists are dynamic and can change the size at runtime
    so to be always on the safe side we should use Iterators.



        Set Interface is a part of Collections Framework:
Main characteristic is that it doesn't allow duplicates

We will be discussing three types of sets:
    1) HashSet 2) LinkedHashset  3) TreeSet
HashSet:
    Most commonly used
    Upside: it is the fastest of all when it comes to retrieving and inserting elements
    Downside: No Insertion order is maintained
  * no get() method because there are no indexes.
    We can access the elements using for loop or Iterator

LinkedHashSet:
    Upside: Insertion order is maintained
    DownSide: retrieval of element will be the slowest
   * insertion speed slower than Hashset;

TreeSet:
    UpSide: Elements will always be in sorted form
    Downside: insertion speed is slowest of all
    Retrieval Speed: better than linkedHashSet but slower than Hashset.

   * Mostly used to remove duplicates in practice

